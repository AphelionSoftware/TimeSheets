//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the TimeSheets_Dev_Leo datasource.
    /// </summary>
    public sealed partial class TimeSheets_Dev_LeoService
        : global::LightSwitchApplication.TimeSheets_Dev_Leo
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TimeSheets_Dev_LeoService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingDetails_Inserting(global::LightSwitchApplication.BillingDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingDetails_Inserted(global::LightSwitchApplication.BillingDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingDetails_Updating(global::LightSwitchApplication.BillingDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingDetails_Updated(global::LightSwitchApplication.BillingDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingDetails_Deleting(global::LightSwitchApplication.BillingDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingDetails_Deleted(global::LightSwitchApplication.BillingDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingDetails_Validate(global::LightSwitchApplication.BillingDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingDetails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BillingDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingStatusSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingStatusSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingStatusSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingStatusSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingStatusSet_Inserting(global::LightSwitchApplication.BillingStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingStatusSet_Inserted(global::LightSwitchApplication.BillingStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingStatusSet_Updating(global::LightSwitchApplication.BillingStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingStatusSet_Updated(global::LightSwitchApplication.BillingStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingStatusSet_Deleting(global::LightSwitchApplication.BillingStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingStatusSet_Deleted(global::LightSwitchApplication.BillingStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingStatusSet_Validate(global::LightSwitchApplication.BillingStatus entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingStatusSet_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BillingStatus, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Inserting(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Inserted(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Updating(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Updated(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Deleting(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Deleted(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Validate(global::LightSwitchApplication.Client entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_Inserting(global::LightSwitchApplication.DimDate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_Inserted(global::LightSwitchApplication.DimDate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_Updating(global::LightSwitchApplication.DimDate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_Updated(global::LightSwitchApplication.DimDate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_Deleting(global::LightSwitchApplication.DimDate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_Deleted(global::LightSwitchApplication.DimDate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_Validate(global::LightSwitchApplication.DimDate entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DimDates_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DimDate, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_Inserting(global::LightSwitchApplication.Person entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_Inserted(global::LightSwitchApplication.Person entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_Updating(global::LightSwitchApplication.Person entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_Updated(global::LightSwitchApplication.Person entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_Deleting(global::LightSwitchApplication.Person entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_Deleted(global::LightSwitchApplication.Person entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_Validate(global::LightSwitchApplication.Person entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void People_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Person, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Inserting(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Inserted(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Updating(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Updated(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Deleting(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Deleted(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Validate(global::LightSwitchApplication.Project entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Timesheets_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Timesheets_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Timesheets_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Timesheets_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Timesheets_Inserting(global::LightSwitchApplication.Timesheet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Timesheets_Inserted(global::LightSwitchApplication.Timesheet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Timesheets_Updating(global::LightSwitchApplication.Timesheet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Timesheets_Updated(global::LightSwitchApplication.Timesheet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Timesheets_Deleting(global::LightSwitchApplication.Timesheet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Timesheets_Deleted(global::LightSwitchApplication.Timesheet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Timesheets_Validate(global::LightSwitchApplication.Timesheet entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Timesheets_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Timesheet, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimesheetDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimesheetDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimesheetDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimesheetDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimesheetDetails_Inserting(global::LightSwitchApplication.TimesheetDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimesheetDetails_Inserted(global::LightSwitchApplication.TimesheetDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimesheetDetails_Updating(global::LightSwitchApplication.TimesheetDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimesheetDetails_Updated(global::LightSwitchApplication.TimesheetDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimesheetDetails_Deleting(global::LightSwitchApplication.TimesheetDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimesheetDetails_Deleted(global::LightSwitchApplication.TimesheetDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimesheetDetails_Validate(global::LightSwitchApplication.TimesheetDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimesheetDetails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimesheetDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorks_Inserting(global::LightSwitchApplication.TypeOfWork entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorks_Inserted(global::LightSwitchApplication.TypeOfWork entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorks_Updating(global::LightSwitchApplication.TypeOfWork entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorks_Updated(global::LightSwitchApplication.TypeOfWork entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorks_Deleting(global::LightSwitchApplication.TypeOfWork entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorks_Deleted(global::LightSwitchApplication.TypeOfWork entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorks_Validate(global::LightSwitchApplication.TypeOfWork entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TypeOfWork, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoleTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoleTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoleTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoleTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoleTypes_Inserting(global::LightSwitchApplication.RoleType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoleTypes_Inserted(global::LightSwitchApplication.RoleType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoleTypes_Updating(global::LightSwitchApplication.RoleType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoleTypes_Updated(global::LightSwitchApplication.RoleType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoleTypes_Deleting(global::LightSwitchApplication.RoleType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoleTypes_Deleted(global::LightSwitchApplication.RoleType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoleTypes_Validate(global::LightSwitchApplication.RoleType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoleTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.RoleType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientRoles_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientRoles_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientRoles_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientRoles_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientRoles_Inserting(global::LightSwitchApplication.ClientRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientRoles_Inserted(global::LightSwitchApplication.ClientRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientRoles_Updating(global::LightSwitchApplication.ClientRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientRoles_Updated(global::LightSwitchApplication.ClientRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientRoles_Deleting(global::LightSwitchApplication.ClientRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientRoles_Deleted(global::LightSwitchApplication.ClientRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientRoles_Validate(global::LightSwitchApplication.ClientRole entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientRoles_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ClientRole, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemRoles_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemRoles_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemRoles_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemRoles_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemRoles_Inserting(global::LightSwitchApplication.SystemRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemRoles_Inserted(global::LightSwitchApplication.SystemRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemRoles_Updating(global::LightSwitchApplication.SystemRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemRoles_Updated(global::LightSwitchApplication.SystemRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemRoles_Deleting(global::LightSwitchApplication.SystemRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemRoles_Deleted(global::LightSwitchApplication.SystemRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemRoles_Validate(global::LightSwitchApplication.SystemRole entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemRoles_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SystemRole, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_Inserting(global::LightSwitchApplication.ActiveType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_Inserted(global::LightSwitchApplication.ActiveType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_Updating(global::LightSwitchApplication.ActiveType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_Updated(global::LightSwitchApplication.ActiveType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_Deleting(global::LightSwitchApplication.ActiveType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_Deleted(global::LightSwitchApplication.ActiveType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_Validate(global::LightSwitchApplication.ActiveType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActiveType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimesheetsByDate_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TimesheetsByDate_Executing(global::System.Nullable<global::System.DateTime> StartDate, global::System.Nullable<global::System.DateTime> EndDate, string TimesheetPerson);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimesheetsByDate_PreprocessQuery(global::System.Nullable<global::System.DateTime> StartDate, global::System.Nullable<global::System.DateTime> EndDate, string TimesheetPerson, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Timesheet> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TimesheetsByDate_Executed(global::System.Nullable<global::System.DateTime> StartDate, global::System.Nullable<global::System.DateTime> EndDate, string TimesheetPerson, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Timesheet> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TimesheetsByDate_ExecuteFailed(global::System.Nullable<global::System.DateTime> StartDate, global::System.Nullable<global::System.DateTime> EndDate, string TimesheetPerson, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PersonSorted_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PersonSorted_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PersonSorted_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Person> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PersonSorted_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Person> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PersonSorted_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingDate_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void BillingDate_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingDate_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.DimDate> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void BillingDate_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DimDate> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void BillingDate_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilteredClient_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FilteredClient_Executing(string ClientName);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilteredClient_PreprocessQuery(string ClientName, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Client> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FilteredClient_Executed(string ClientName, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Client> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FilteredClient_ExecuteFailed(string ClientName, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectsFilter_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProjectsFilter_Executing(string ClientName, string ProjectName);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectsFilter_PreprocessQuery(string ClientName, string ProjectName, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Project> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProjectsFilter_Executed(string ClientName, string ProjectName, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProjectsFilter_ExecuteFailed(string ClientName, string ProjectName, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.BillingDetail>
                __BillingDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.BillingDetail>(
                    "BillingDetails",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingDetails_CanInsert,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingDetails_CanUpdate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingDetails_CanDelete,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingDetails_CanRead,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingDetails_Inserting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingDetails_Inserted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingDetails_Updating,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingDetails_Updated,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingDetails_Deleting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingDetails_Deleted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingDetails_Validate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingDetails_Filter);
            private static bool __BillingDetails_CanInsert(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.BillingDetails_CanInsert(ref result);
                return result;
            }
            private static bool __BillingDetails_CanUpdate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.BillingDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __BillingDetails_CanDelete(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.BillingDetails_CanDelete(ref result);
                return result;
            }
            private static bool __BillingDetails_CanRead(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.BillingDetails_CanRead(ref result);
                return result;
            }
            private static void __BillingDetails_Inserting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.BillingDetail e)
            {
                d.BillingDetails_Inserting(e);
            }
            private static void __BillingDetails_Inserted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.BillingDetail e)
            {
                d.BillingDetails_Inserted(e);
            }
            private static void __BillingDetails_Updating(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.BillingDetail e)
            {
                d.BillingDetails_Updating(e);
            }
            private static void __BillingDetails_Updated(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.BillingDetail e)
            {
                d.BillingDetails_Updated(e);
            }
            private static void __BillingDetails_Deleting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.BillingDetail e)
            {
                d.BillingDetails_Deleting(e);
            }
            private static void __BillingDetails_Deleted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.BillingDetail e)
            {
                d.BillingDetails_Deleted(e);
            }
            private static void __BillingDetails_Validate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.BillingDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.BillingDetails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BillingDetail, bool>> __BillingDetails_Filter(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BillingDetail, bool>> filter = null;
                d.BillingDetails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.BillingStatus>
                __BillingStatusSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.BillingStatus>(
                    "BillingStatusSet",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingStatusSet_CanInsert,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingStatusSet_CanUpdate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingStatusSet_CanDelete,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingStatusSet_CanRead,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingStatusSet_Inserting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingStatusSet_Inserted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingStatusSet_Updating,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingStatusSet_Updated,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingStatusSet_Deleting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingStatusSet_Deleted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingStatusSet_Validate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingStatusSet_Filter);
            private static bool __BillingStatusSet_CanInsert(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.BillingStatusSet_CanInsert(ref result);
                return result;
            }
            private static bool __BillingStatusSet_CanUpdate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.BillingStatusSet_CanUpdate(ref result);
                return result;
            }
            private static bool __BillingStatusSet_CanDelete(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.BillingStatusSet_CanDelete(ref result);
                return result;
            }
            private static bool __BillingStatusSet_CanRead(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.BillingStatusSet_CanRead(ref result);
                return result;
            }
            private static void __BillingStatusSet_Inserting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.BillingStatus e)
            {
                d.BillingStatusSet_Inserting(e);
            }
            private static void __BillingStatusSet_Inserted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.BillingStatus e)
            {
                d.BillingStatusSet_Inserted(e);
            }
            private static void __BillingStatusSet_Updating(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.BillingStatus e)
            {
                d.BillingStatusSet_Updating(e);
            }
            private static void __BillingStatusSet_Updated(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.BillingStatus e)
            {
                d.BillingStatusSet_Updated(e);
            }
            private static void __BillingStatusSet_Deleting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.BillingStatus e)
            {
                d.BillingStatusSet_Deleting(e);
            }
            private static void __BillingStatusSet_Deleted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.BillingStatus e)
            {
                d.BillingStatusSet_Deleted(e);
            }
            private static void __BillingStatusSet_Validate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.BillingStatus e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.BillingStatusSet_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BillingStatus, bool>> __BillingStatusSet_Filter(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BillingStatus, bool>> filter = null;
                d.BillingStatusSet_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.Client>
                __ClientsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.Client>(
                    "Clients",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Clients_CanInsert,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Clients_CanUpdate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Clients_CanDelete,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Clients_CanRead,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Clients_Inserting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Clients_Inserted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Clients_Updating,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Clients_Updated,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Clients_Deleting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Clients_Deleted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Clients_Validate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Clients_Filter);
            private static bool __Clients_CanInsert(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.Clients_CanInsert(ref result);
                return result;
            }
            private static bool __Clients_CanUpdate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.Clients_CanUpdate(ref result);
                return result;
            }
            private static bool __Clients_CanDelete(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.Clients_CanDelete(ref result);
                return result;
            }
            private static bool __Clients_CanRead(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.Clients_CanRead(ref result);
                return result;
            }
            private static void __Clients_Inserting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Inserting(e);
            }
            private static void __Clients_Inserted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Inserted(e);
            }
            private static void __Clients_Updating(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Updating(e);
            }
            private static void __Clients_Updated(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Updated(e);
            }
            private static void __Clients_Deleting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Deleting(e);
            }
            private static void __Clients_Deleted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Deleted(e);
            }
            private static void __Clients_Validate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Client e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Clients_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> __Clients_Filter(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> filter = null;
                d.Clients_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.DimDate>
                __DimDatesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.DimDate>(
                    "DimDates",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__DimDates_CanInsert,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__DimDates_CanUpdate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__DimDates_CanDelete,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__DimDates_CanRead,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__DimDates_Inserting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__DimDates_Inserted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__DimDates_Updating,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__DimDates_Updated,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__DimDates_Deleting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__DimDates_Deleted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__DimDates_Validate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__DimDates_Filter);
            private static bool __DimDates_CanInsert(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.DimDates_CanInsert(ref result);
                return result;
            }
            private static bool __DimDates_CanUpdate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.DimDates_CanUpdate(ref result);
                return result;
            }
            private static bool __DimDates_CanDelete(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.DimDates_CanDelete(ref result);
                return result;
            }
            private static bool __DimDates_CanRead(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.DimDates_CanRead(ref result);
                return result;
            }
            private static void __DimDates_Inserting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.DimDate e)
            {
                d.DimDates_Inserting(e);
            }
            private static void __DimDates_Inserted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.DimDate e)
            {
                d.DimDates_Inserted(e);
            }
            private static void __DimDates_Updating(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.DimDate e)
            {
                d.DimDates_Updating(e);
            }
            private static void __DimDates_Updated(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.DimDate e)
            {
                d.DimDates_Updated(e);
            }
            private static void __DimDates_Deleting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.DimDate e)
            {
                d.DimDates_Deleting(e);
            }
            private static void __DimDates_Deleted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.DimDate e)
            {
                d.DimDates_Deleted(e);
            }
            private static void __DimDates_Validate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.DimDate e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DimDates_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DimDate, bool>> __DimDates_Filter(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DimDate, bool>> filter = null;
                d.DimDates_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.Person>
                __PeopleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.Person>(
                    "People",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__People_CanInsert,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__People_CanUpdate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__People_CanDelete,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__People_CanRead,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__People_Inserting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__People_Inserted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__People_Updating,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__People_Updated,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__People_Deleting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__People_Deleted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__People_Validate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__People_Filter);
            private static bool __People_CanInsert(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.People_CanInsert(ref result);
                return result;
            }
            private static bool __People_CanUpdate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.People_CanUpdate(ref result);
                return result;
            }
            private static bool __People_CanDelete(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.People_CanDelete(ref result);
                return result;
            }
            private static bool __People_CanRead(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.People_CanRead(ref result);
                return result;
            }
            private static void __People_Inserting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Person e)
            {
                d.People_Inserting(e);
            }
            private static void __People_Inserted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Person e)
            {
                d.People_Inserted(e);
            }
            private static void __People_Updating(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Person e)
            {
                d.People_Updating(e);
            }
            private static void __People_Updated(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Person e)
            {
                d.People_Updated(e);
            }
            private static void __People_Deleting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Person e)
            {
                d.People_Deleting(e);
            }
            private static void __People_Deleted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Person e)
            {
                d.People_Deleted(e);
            }
            private static void __People_Validate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Person e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.People_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Person, bool>> __People_Filter(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Person, bool>> filter = null;
                d.People_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.Project>
                __ProjectsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.Project>(
                    "Projects",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Projects_CanInsert,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Projects_CanUpdate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Projects_CanDelete,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Projects_CanRead,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Projects_Inserting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Projects_Inserted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Projects_Updating,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Projects_Updated,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Projects_Deleting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Projects_Deleted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Projects_Validate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Projects_Filter);
            private static bool __Projects_CanInsert(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.Projects_CanInsert(ref result);
                return result;
            }
            private static bool __Projects_CanUpdate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.Projects_CanUpdate(ref result);
                return result;
            }
            private static bool __Projects_CanDelete(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.Projects_CanDelete(ref result);
                return result;
            }
            private static bool __Projects_CanRead(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.Projects_CanRead(ref result);
                return result;
            }
            private static void __Projects_Inserting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Inserting(e);
            }
            private static void __Projects_Inserted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Inserted(e);
            }
            private static void __Projects_Updating(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Updating(e);
            }
            private static void __Projects_Updated(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Updated(e);
            }
            private static void __Projects_Deleting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Deleting(e);
            }
            private static void __Projects_Deleted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Deleted(e);
            }
            private static void __Projects_Validate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Project e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Projects_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> __Projects_Filter(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> filter = null;
                d.Projects_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.Timesheet>
                __TimesheetsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.Timesheet>(
                    "Timesheets",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Timesheets_CanInsert,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Timesheets_CanUpdate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Timesheets_CanDelete,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Timesheets_CanRead,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Timesheets_Inserting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Timesheets_Inserted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Timesheets_Updating,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Timesheets_Updated,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Timesheets_Deleting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Timesheets_Deleted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Timesheets_Validate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Timesheets_Filter);
            private static bool __Timesheets_CanInsert(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.Timesheets_CanInsert(ref result);
                return result;
            }
            private static bool __Timesheets_CanUpdate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.Timesheets_CanUpdate(ref result);
                return result;
            }
            private static bool __Timesheets_CanDelete(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.Timesheets_CanDelete(ref result);
                return result;
            }
            private static bool __Timesheets_CanRead(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.Timesheets_CanRead(ref result);
                return result;
            }
            private static void __Timesheets_Inserting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Timesheet e)
            {
                d.Timesheets_Inserting(e);
            }
            private static void __Timesheets_Inserted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Timesheet e)
            {
                d.Timesheets_Inserted(e);
            }
            private static void __Timesheets_Updating(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Timesheet e)
            {
                d.Timesheets_Updating(e);
            }
            private static void __Timesheets_Updated(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Timesheet e)
            {
                d.Timesheets_Updated(e);
            }
            private static void __Timesheets_Deleting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Timesheet e)
            {
                d.Timesheets_Deleting(e);
            }
            private static void __Timesheets_Deleted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Timesheet e)
            {
                d.Timesheets_Deleted(e);
            }
            private static void __Timesheets_Validate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.Timesheet e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Timesheets_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Timesheet, bool>> __Timesheets_Filter(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Timesheet, bool>> filter = null;
                d.Timesheets_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.TimesheetDetail>
                __TimesheetDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.TimesheetDetail>(
                    "TimesheetDetails",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TimesheetDetails_CanInsert,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TimesheetDetails_CanUpdate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TimesheetDetails_CanDelete,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TimesheetDetails_CanRead,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TimesheetDetails_Inserting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TimesheetDetails_Inserted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TimesheetDetails_Updating,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TimesheetDetails_Updated,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TimesheetDetails_Deleting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TimesheetDetails_Deleted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TimesheetDetails_Validate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TimesheetDetails_Filter);
            private static bool __TimesheetDetails_CanInsert(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.TimesheetDetails_CanInsert(ref result);
                return result;
            }
            private static bool __TimesheetDetails_CanUpdate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.TimesheetDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __TimesheetDetails_CanDelete(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.TimesheetDetails_CanDelete(ref result);
                return result;
            }
            private static bool __TimesheetDetails_CanRead(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.TimesheetDetails_CanRead(ref result);
                return result;
            }
            private static void __TimesheetDetails_Inserting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.TimesheetDetail e)
            {
                d.TimesheetDetails_Inserting(e);
            }
            private static void __TimesheetDetails_Inserted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.TimesheetDetail e)
            {
                d.TimesheetDetails_Inserted(e);
            }
            private static void __TimesheetDetails_Updating(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.TimesheetDetail e)
            {
                d.TimesheetDetails_Updating(e);
            }
            private static void __TimesheetDetails_Updated(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.TimesheetDetail e)
            {
                d.TimesheetDetails_Updated(e);
            }
            private static void __TimesheetDetails_Deleting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.TimesheetDetail e)
            {
                d.TimesheetDetails_Deleting(e);
            }
            private static void __TimesheetDetails_Deleted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.TimesheetDetail e)
            {
                d.TimesheetDetails_Deleted(e);
            }
            private static void __TimesheetDetails_Validate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.TimesheetDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TimesheetDetails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimesheetDetail, bool>> __TimesheetDetails_Filter(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimesheetDetail, bool>> filter = null;
                d.TimesheetDetails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.TypeOfWork>
                __TypeOfWorksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.TypeOfWork>(
                    "TypeOfWorks",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TypeOfWorks_CanInsert,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TypeOfWorks_CanUpdate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TypeOfWorks_CanDelete,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TypeOfWorks_CanRead,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TypeOfWorks_Inserting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TypeOfWorks_Inserted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TypeOfWorks_Updating,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TypeOfWorks_Updated,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TypeOfWorks_Deleting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TypeOfWorks_Deleted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TypeOfWorks_Validate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TypeOfWorks_Filter);
            private static bool __TypeOfWorks_CanInsert(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.TypeOfWorks_CanInsert(ref result);
                return result;
            }
            private static bool __TypeOfWorks_CanUpdate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.TypeOfWorks_CanUpdate(ref result);
                return result;
            }
            private static bool __TypeOfWorks_CanDelete(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.TypeOfWorks_CanDelete(ref result);
                return result;
            }
            private static bool __TypeOfWorks_CanRead(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.TypeOfWorks_CanRead(ref result);
                return result;
            }
            private static void __TypeOfWorks_Inserting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.TypeOfWork e)
            {
                d.TypeOfWorks_Inserting(e);
            }
            private static void __TypeOfWorks_Inserted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.TypeOfWork e)
            {
                d.TypeOfWorks_Inserted(e);
            }
            private static void __TypeOfWorks_Updating(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.TypeOfWork e)
            {
                d.TypeOfWorks_Updating(e);
            }
            private static void __TypeOfWorks_Updated(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.TypeOfWork e)
            {
                d.TypeOfWorks_Updated(e);
            }
            private static void __TypeOfWorks_Deleting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.TypeOfWork e)
            {
                d.TypeOfWorks_Deleting(e);
            }
            private static void __TypeOfWorks_Deleted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.TypeOfWork e)
            {
                d.TypeOfWorks_Deleted(e);
            }
            private static void __TypeOfWorks_Validate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.TypeOfWork e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TypeOfWorks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TypeOfWork, bool>> __TypeOfWorks_Filter(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TypeOfWork, bool>> filter = null;
                d.TypeOfWorks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.RoleType>
                __RoleTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.RoleType>(
                    "RoleTypes",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__RoleTypes_CanInsert,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__RoleTypes_CanUpdate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__RoleTypes_CanDelete,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__RoleTypes_CanRead,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__RoleTypes_Inserting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__RoleTypes_Inserted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__RoleTypes_Updating,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__RoleTypes_Updated,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__RoleTypes_Deleting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__RoleTypes_Deleted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__RoleTypes_Validate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__RoleTypes_Filter);
            private static bool __RoleTypes_CanInsert(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.RoleTypes_CanInsert(ref result);
                return result;
            }
            private static bool __RoleTypes_CanUpdate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.RoleTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __RoleTypes_CanDelete(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.RoleTypes_CanDelete(ref result);
                return result;
            }
            private static bool __RoleTypes_CanRead(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.RoleTypes_CanRead(ref result);
                return result;
            }
            private static void __RoleTypes_Inserting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.RoleType e)
            {
                d.RoleTypes_Inserting(e);
            }
            private static void __RoleTypes_Inserted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.RoleType e)
            {
                d.RoleTypes_Inserted(e);
            }
            private static void __RoleTypes_Updating(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.RoleType e)
            {
                d.RoleTypes_Updating(e);
            }
            private static void __RoleTypes_Updated(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.RoleType e)
            {
                d.RoleTypes_Updated(e);
            }
            private static void __RoleTypes_Deleting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.RoleType e)
            {
                d.RoleTypes_Deleting(e);
            }
            private static void __RoleTypes_Deleted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.RoleType e)
            {
                d.RoleTypes_Deleted(e);
            }
            private static void __RoleTypes_Validate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.RoleType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.RoleTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.RoleType, bool>> __RoleTypes_Filter(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.RoleType, bool>> filter = null;
                d.RoleTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.ClientRole>
                __ClientRolesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.ClientRole>(
                    "ClientRoles",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ClientRoles_CanInsert,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ClientRoles_CanUpdate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ClientRoles_CanDelete,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ClientRoles_CanRead,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ClientRoles_Inserting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ClientRoles_Inserted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ClientRoles_Updating,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ClientRoles_Updated,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ClientRoles_Deleting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ClientRoles_Deleted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ClientRoles_Validate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ClientRoles_Filter);
            private static bool __ClientRoles_CanInsert(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.ClientRoles_CanInsert(ref result);
                return result;
            }
            private static bool __ClientRoles_CanUpdate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.ClientRoles_CanUpdate(ref result);
                return result;
            }
            private static bool __ClientRoles_CanDelete(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.ClientRoles_CanDelete(ref result);
                return result;
            }
            private static bool __ClientRoles_CanRead(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.ClientRoles_CanRead(ref result);
                return result;
            }
            private static void __ClientRoles_Inserting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.ClientRole e)
            {
                d.ClientRoles_Inserting(e);
            }
            private static void __ClientRoles_Inserted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.ClientRole e)
            {
                d.ClientRoles_Inserted(e);
            }
            private static void __ClientRoles_Updating(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.ClientRole e)
            {
                d.ClientRoles_Updating(e);
            }
            private static void __ClientRoles_Updated(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.ClientRole e)
            {
                d.ClientRoles_Updated(e);
            }
            private static void __ClientRoles_Deleting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.ClientRole e)
            {
                d.ClientRoles_Deleting(e);
            }
            private static void __ClientRoles_Deleted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.ClientRole e)
            {
                d.ClientRoles_Deleted(e);
            }
            private static void __ClientRoles_Validate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.ClientRole e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ClientRoles_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ClientRole, bool>> __ClientRoles_Filter(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ClientRole, bool>> filter = null;
                d.ClientRoles_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.SystemRole>
                __SystemRolesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.SystemRole>(
                    "SystemRoles",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__SystemRoles_CanInsert,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__SystemRoles_CanUpdate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__SystemRoles_CanDelete,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__SystemRoles_CanRead,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__SystemRoles_Inserting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__SystemRoles_Inserted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__SystemRoles_Updating,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__SystemRoles_Updated,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__SystemRoles_Deleting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__SystemRoles_Deleted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__SystemRoles_Validate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__SystemRoles_Filter);
            private static bool __SystemRoles_CanInsert(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.SystemRoles_CanInsert(ref result);
                return result;
            }
            private static bool __SystemRoles_CanUpdate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.SystemRoles_CanUpdate(ref result);
                return result;
            }
            private static bool __SystemRoles_CanDelete(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.SystemRoles_CanDelete(ref result);
                return result;
            }
            private static bool __SystemRoles_CanRead(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.SystemRoles_CanRead(ref result);
                return result;
            }
            private static void __SystemRoles_Inserting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.SystemRole e)
            {
                d.SystemRoles_Inserting(e);
            }
            private static void __SystemRoles_Inserted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.SystemRole e)
            {
                d.SystemRoles_Inserted(e);
            }
            private static void __SystemRoles_Updating(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.SystemRole e)
            {
                d.SystemRoles_Updating(e);
            }
            private static void __SystemRoles_Updated(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.SystemRole e)
            {
                d.SystemRoles_Updated(e);
            }
            private static void __SystemRoles_Deleting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.SystemRole e)
            {
                d.SystemRoles_Deleting(e);
            }
            private static void __SystemRoles_Deleted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.SystemRole e)
            {
                d.SystemRoles_Deleted(e);
            }
            private static void __SystemRoles_Validate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.SystemRole e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SystemRoles_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SystemRole, bool>> __SystemRoles_Filter(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SystemRole, bool>> filter = null;
                d.SystemRoles_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.ActiveType>
                __ActiveTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.ActiveType>(
                    "ActiveTypes",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ActiveTypes_CanInsert,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ActiveTypes_CanUpdate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ActiveTypes_CanDelete,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ActiveTypes_CanRead,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ActiveTypes_Inserting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ActiveTypes_Inserted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ActiveTypes_Updating,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ActiveTypes_Updated,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ActiveTypes_Deleting,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ActiveTypes_Deleted,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ActiveTypes_Validate,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ActiveTypes_Filter);
            private static bool __ActiveTypes_CanInsert(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.ActiveTypes_CanInsert(ref result);
                return result;
            }
            private static bool __ActiveTypes_CanUpdate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.ActiveTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __ActiveTypes_CanDelete(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.ActiveTypes_CanDelete(ref result);
                return result;
            }
            private static bool __ActiveTypes_CanRead(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                bool result = true;
                d.ActiveTypes_CanRead(ref result);
                return result;
            }
            private static void __ActiveTypes_Inserting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.ActiveType e)
            {
                d.ActiveTypes_Inserting(e);
            }
            private static void __ActiveTypes_Inserted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.ActiveType e)
            {
                d.ActiveTypes_Inserted(e);
            }
            private static void __ActiveTypes_Updating(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.ActiveType e)
            {
                d.ActiveTypes_Updating(e);
            }
            private static void __ActiveTypes_Updated(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.ActiveType e)
            {
                d.ActiveTypes_Updated(e);
            }
            private static void __ActiveTypes_Deleting(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.ActiveType e)
            {
                d.ActiveTypes_Deleting(e);
            }
            private static void __ActiveTypes_Deleted(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.ActiveType e)
            {
                d.ActiveTypes_Deleted(e);
            }
            private static void __ActiveTypes_Validate(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::LightSwitchApplication.ActiveType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ActiveTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActiveType, bool>> __ActiveTypes_Filter(global::LightSwitchApplication.TimeSheets_Dev_LeoService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActiveType, bool>> filter = null;
                d.ActiveTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService>(
                    "SaveChanges",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.Timesheet>
                __TimesheetsByDateEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.Timesheet>(
                    "TimesheetsByDate",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TimesheetsByDate_CanExecute,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TimesheetsByDate_Executing,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TimesheetsByDate_Executed,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TimesheetsByDate_Failed,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__TimesheetsByDate_PreprocessQuery);
            private static bool __TimesheetsByDate_CanExecute(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, bool r)
            {
                d.TimesheetsByDate_CanExecute(ref r);
                return r;
            }
            private static void __TimesheetsByDate_Executing(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args)
            {
                d.TimesheetsByDate_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2]);
            }
            private static void __TimesheetsByDate_Executed(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args)
            {
                d.TimesheetsByDate_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Timesheet>)args[3]);
            }
            private static void __TimesheetsByDate_Failed(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args, global::System.Exception ex)
            {
                d.TimesheetsByDate_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], ex);
            }
            private static global::System.Linq.IQueryable __TimesheetsByDate_PreprocessQuery(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Timesheet> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Timesheet>)args[3];
                d.TimesheetsByDate_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.Person>
                __PersonSortedEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.Person>(
                    "PersonSorted",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__PersonSorted_CanExecute,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__PersonSorted_Executing,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__PersonSorted_Executed,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__PersonSorted_Failed,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__PersonSorted_PreprocessQuery);
            private static bool __PersonSorted_CanExecute(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, bool r)
            {
                d.PersonSorted_CanExecute(ref r);
                return r;
            }
            private static void __PersonSorted_Executing(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args)
            {
                d.PersonSorted_Executing();
            }
            private static void __PersonSorted_Executed(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args)
            {
                d.PersonSorted_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Person>)args[0]);
            }
            private static void __PersonSorted_Failed(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args, global::System.Exception ex)
            {
                d.PersonSorted_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __PersonSorted_PreprocessQuery(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Person> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Person>)args[0];
                d.PersonSorted_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.DimDate>
                __BillingDateEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.DimDate>(
                    "BillingDate",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingDate_CanExecute,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingDate_Executing,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingDate_Executed,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingDate_Failed,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__BillingDate_PreprocessQuery);
            private static bool __BillingDate_CanExecute(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, bool r)
            {
                d.BillingDate_CanExecute(ref r);
                return r;
            }
            private static void __BillingDate_Executing(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args)
            {
                d.BillingDate_Executing();
            }
            private static void __BillingDate_Executed(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args)
            {
                d.BillingDate_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DimDate>)args[0]);
            }
            private static void __BillingDate_Failed(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args, global::System.Exception ex)
            {
                d.BillingDate_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __BillingDate_PreprocessQuery(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.DimDate> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.DimDate>)args[0];
                d.BillingDate_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.Client>
                __FilteredClientEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.Client>(
                    "FilteredClient",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__FilteredClient_CanExecute,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__FilteredClient_Executing,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__FilteredClient_Executed,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__FilteredClient_Failed,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__FilteredClient_PreprocessQuery);
            private static bool __FilteredClient_CanExecute(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, bool r)
            {
                d.FilteredClient_CanExecute(ref r);
                return r;
            }
            private static void __FilteredClient_Executing(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args)
            {
                d.FilteredClient_Executing((string)args[0]);
            }
            private static void __FilteredClient_Executed(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args)
            {
                d.FilteredClient_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Client>)args[1]);
            }
            private static void __FilteredClient_Failed(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args, global::System.Exception ex)
            {
                d.FilteredClient_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __FilteredClient_PreprocessQuery(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Client> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Client>)args[1];
                d.FilteredClient_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.Project>
                __ProjectsFilterEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService, global::LightSwitchApplication.Project>(
                    "ProjectsFilter",
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ProjectsFilter_CanExecute,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ProjectsFilter_Executing,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ProjectsFilter_Executed,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ProjectsFilter_Failed,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__ProjectsFilter_PreprocessQuery);
            private static bool __ProjectsFilter_CanExecute(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, bool r)
            {
                d.ProjectsFilter_CanExecute(ref r);
                return r;
            }
            private static void __ProjectsFilter_Executing(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args)
            {
                d.ProjectsFilter_Executing((string)args[0], (string)args[1]);
            }
            private static void __ProjectsFilter_Executed(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args)
            {
                d.ProjectsFilter_Executed((string)args[0], (string)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project>)args[2]);
            }
            private static void __ProjectsFilter_Failed(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args, global::System.Exception ex)
            {
                d.ProjectsFilter_ExecuteFailed((string)args[0], (string)args[1], ex);
            }
            private static global::System.Linq.IQueryable __ProjectsFilter_PreprocessQuery(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Project> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Project>)args[2];
                d.ProjectsFilter_PreprocessQuery((string)args[0], (string)args[1], ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.TimeSheets_Dev_LeoService>(
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.TimeSheets_Dev_LeoService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.TimeSheets_Dev_LeoService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
