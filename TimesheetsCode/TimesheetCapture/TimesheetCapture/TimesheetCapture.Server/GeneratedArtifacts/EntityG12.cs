

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class TypeOfWork : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the TypeOfWork entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TypeOfWork()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TypeOfWork(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TypeOfWork> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.TypeOfWork.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWork_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWork_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int TypeOfWorkID
        {
            get
            {
                return global::LightSwitchApplication.TypeOfWork.DetailsClass.GetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.TypeOfWorkID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorkID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorkID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorkID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TypeOfWorkSourceKey
        {
            get
            {
                return global::LightSwitchApplication.TypeOfWork.DetailsClass.GetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.TypeOfWorkSourceKey);
            }
            set
            {
                global::LightSwitchApplication.TypeOfWork.DetailsClass.SetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.TypeOfWorkSourceKey, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorkSourceKey_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorkSourceKey_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorkSourceKey_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime LoadDate
        {
            get
            {
                return global::LightSwitchApplication.TypeOfWork.DetailsClass.GetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.LoadDate);
            }
            set
            {
                global::LightSwitchApplication.TypeOfWork.DetailsClass.SetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.LoadDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LoadDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LoadDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LoadDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TypeOfWorkName
        {
            get
            {
                return global::LightSwitchApplication.TypeOfWork.DetailsClass.GetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.TypeOfWorkName);
            }
            set
            {
                global::LightSwitchApplication.TypeOfWork.DetailsClass.SetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.TypeOfWorkName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorkName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorkName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorkName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TypeOfWorkCode
        {
            get
            {
                return global::LightSwitchApplication.TypeOfWork.DetailsClass.GetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.TypeOfWorkCode);
            }
            set
            {
                global::LightSwitchApplication.TypeOfWork.DetailsClass.SetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.TypeOfWorkCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorkCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorkCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeOfWorkCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> LoadDateID
        {
            get
            {
                return global::LightSwitchApplication.TypeOfWork.DetailsClass.GetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.LoadDateID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LoadDateID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LoadDateID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LoadDateID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime sys_CreatedOn
        {
            get
            {
                return global::LightSwitchApplication.TypeOfWork.DetailsClass.GetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.sys_CreatedOn);
            }
            set
            {
                global::LightSwitchApplication.TypeOfWork.DetailsClass.SetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.sys_CreatedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string sys_CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.TypeOfWork.DetailsClass.GetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.sys_CreatedBy);
            }
            set
            {
                global::LightSwitchApplication.TypeOfWork.DetailsClass.SetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.sys_CreatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime sys_ModifiedOn
        {
            get
            {
                return global::LightSwitchApplication.TypeOfWork.DetailsClass.GetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.sys_ModifiedOn);
            }
            set
            {
                global::LightSwitchApplication.TypeOfWork.DetailsClass.SetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.sys_ModifiedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string sys_ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.TypeOfWork.DetailsClass.GetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.sys_ModifiedBy);
            }
            set
            {
                global::LightSwitchApplication.TypeOfWork.DetailsClass.SetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.sys_ModifiedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sys_ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.TimesheetDetail> TimesheetDetails
        {
            get
            {
                return global::LightSwitchApplication.TypeOfWork.DetailsClass.GetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.TimesheetDetails);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimesheetDetail> TimesheetDetailsQuery
        {
            get
            {
                return global::LightSwitchApplication.TypeOfWork.DetailsClass.GetQuery(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.TimesheetDetails);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ActiveType ActiveType
        {
            get
            {
                return global::LightSwitchApplication.TypeOfWork.DetailsClass.GetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.ActiveType);
            }
            set
            {
                global::LightSwitchApplication.TypeOfWork.DetailsClass.SetValue(this, global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.ActiveType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveType_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.TypeOfWork,
                global::LightSwitchApplication.TypeOfWork.DetailsClass,
                global::LightSwitchApplication.TypeOfWork.DetailsClass.IImplementation,
                global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.TypeOfWorkID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass>.Entry
                __TypeOfWorkEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass>.Entry(
                    global::LightSwitchApplication.TypeOfWork.DetailsClass.__TypeOfWork_CreateNew,
                    global::LightSwitchApplication.TypeOfWork.DetailsClass.__TypeOfWork_Created,
                    global::LightSwitchApplication.TypeOfWork.DetailsClass.__TypeOfWork_AllowSaveWithErrors);
            private static global::LightSwitchApplication.TypeOfWork __TypeOfWork_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TypeOfWork> es)
            {
                return new global::LightSwitchApplication.TypeOfWork(es);
            }
            private static void __TypeOfWork_Created(global::LightSwitchApplication.TypeOfWork e)
            {
                e.TypeOfWork_Created();
            }
            private static bool __TypeOfWork_AllowSaveWithErrors(global::LightSwitchApplication.TypeOfWork e)
            {
                bool result = false;
                e.TypeOfWork_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, int> TypeOfWorkID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.TypeOfWorkID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string> TypeOfWorkSourceKey
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.TypeOfWorkSourceKey) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime> LoadDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.LoadDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string> TypeOfWorkName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.TypeOfWorkName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string> TypeOfWorkCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.TypeOfWorkCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.Nullable<int>> LoadDateID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.LoadDateID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime> sys_CreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.sys_CreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string> sys_CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.sys_CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime> sys_ModifiedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.sys_ModifiedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string> sys_ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.sys_ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::LightSwitchApplication.TimesheetDetail> TimesheetDetails
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.TimesheetDetails) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::LightSwitchApplication.TimesheetDetail>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::LightSwitchApplication.ActiveType> ActiveType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.ActiveType) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::LightSwitchApplication.ActiveType>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int TypeOfWorkID { get; }
                new string TypeOfWorkSourceKey { get; set; }
                new global::System.DateTime LoadDate { get; set; }
                new string TypeOfWorkName { get; set; }
                new string TypeOfWorkCode { get; set; }
                new global::System.Nullable<int> LoadDateID { get; }
                new global::System.DateTime sys_CreatedOn { get; set; }
                new string sys_CreatedBy { get; set; }
                new global::System.DateTime sys_ModifiedOn { get; set; }
                new string sys_ModifiedBy { get; set; }
                new global::System.Collections.IEnumerable TimesheetDetails { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ActiveType { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, int>.Entry
                    TypeOfWorkID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, int>.Entry(
                        "TypeOfWorkID",
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkID_Stub,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkID_ComputeIsReadOnly,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkID_Validate,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkID_OnValueChanged);
                private static void _TypeOfWorkID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TypeOfWork.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, int>.Data> c, global::LightSwitchApplication.TypeOfWork.DetailsClass d, object sf)
                {
                    c(d, ref d._TypeOfWorkID, sf);
                }
                private static bool _TypeOfWorkID_ComputeIsReadOnly(global::LightSwitchApplication.TypeOfWork e)
                {
                    bool result = false;
                    e.TypeOfWorkID_IsReadOnly(ref result);
                    return result;
                }
                private static void _TypeOfWorkID_Validate(global::LightSwitchApplication.TypeOfWork e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TypeOfWorkID_Validate(r);
                }
                private static int _TypeOfWorkID_GetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d)
                {
                    return d.ImplementationEntity.TypeOfWorkID;
                }
                private static void _TypeOfWorkID_OnValueChanged(global::LightSwitchApplication.TypeOfWork e)
                {
                    e.TypeOfWorkID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Entry
                    TypeOfWorkSourceKey = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Entry(
                        "TypeOfWorkSourceKey",
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkSourceKey_Stub,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkSourceKey_ComputeIsReadOnly,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkSourceKey_Validate,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkSourceKey_GetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkSourceKey_SetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkSourceKey_OnValueChanged);
                private static void _TypeOfWorkSourceKey_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TypeOfWork.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Data> c, global::LightSwitchApplication.TypeOfWork.DetailsClass d, object sf)
                {
                    c(d, ref d._TypeOfWorkSourceKey, sf);
                }
                private static bool _TypeOfWorkSourceKey_ComputeIsReadOnly(global::LightSwitchApplication.TypeOfWork e)
                {
                    bool result = false;
                    e.TypeOfWorkSourceKey_IsReadOnly(ref result);
                    return result;
                }
                private static void _TypeOfWorkSourceKey_Validate(global::LightSwitchApplication.TypeOfWork e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TypeOfWorkSourceKey_Validate(r);
                }
                private static string _TypeOfWorkSourceKey_GetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d)
                {
                    return d.ImplementationEntity.TypeOfWorkSourceKey;
                }
                private static void _TypeOfWorkSourceKey_SetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TypeOfWorkSourceKey = v;
                }
                private static void _TypeOfWorkSourceKey_OnValueChanged(global::LightSwitchApplication.TypeOfWork e)
                {
                    e.TypeOfWorkSourceKey_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime>.Entry
                    LoadDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime>.Entry(
                        "LoadDate",
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._LoadDate_Stub,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._LoadDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._LoadDate_Validate,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._LoadDate_GetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._LoadDate_SetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._LoadDate_OnValueChanged);
                private static void _LoadDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TypeOfWork.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.TypeOfWork.DetailsClass d, object sf)
                {
                    c(d, ref d._LoadDate, sf);
                }
                private static bool _LoadDate_ComputeIsReadOnly(global::LightSwitchApplication.TypeOfWork e)
                {
                    bool result = false;
                    e.LoadDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _LoadDate_Validate(global::LightSwitchApplication.TypeOfWork e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LoadDate_Validate(r);
                }
                private static global::System.DateTime _LoadDate_GetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d)
                {
                    return d.ImplementationEntity.LoadDate;
                }
                private static void _LoadDate_SetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.LoadDate = global::LightSwitchApplication.TypeOfWork.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _LoadDate_OnValueChanged(global::LightSwitchApplication.TypeOfWork e)
                {
                    e.LoadDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Entry
                    TypeOfWorkName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Entry(
                        "TypeOfWorkName",
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkName_Stub,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkName_ComputeIsReadOnly,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkName_Validate,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkName_GetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkName_SetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkName_OnValueChanged);
                private static void _TypeOfWorkName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TypeOfWork.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Data> c, global::LightSwitchApplication.TypeOfWork.DetailsClass d, object sf)
                {
                    c(d, ref d._TypeOfWorkName, sf);
                }
                private static bool _TypeOfWorkName_ComputeIsReadOnly(global::LightSwitchApplication.TypeOfWork e)
                {
                    bool result = false;
                    e.TypeOfWorkName_IsReadOnly(ref result);
                    return result;
                }
                private static void _TypeOfWorkName_Validate(global::LightSwitchApplication.TypeOfWork e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TypeOfWorkName_Validate(r);
                }
                private static string _TypeOfWorkName_GetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d)
                {
                    return d.ImplementationEntity.TypeOfWorkName;
                }
                private static void _TypeOfWorkName_SetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TypeOfWorkName = v;
                }
                private static void _TypeOfWorkName_OnValueChanged(global::LightSwitchApplication.TypeOfWork e)
                {
                    e.TypeOfWorkName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Entry
                    TypeOfWorkCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Entry(
                        "TypeOfWorkCode",
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkCode_Stub,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkCode_Validate,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkCode_GetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkCode_SetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TypeOfWorkCode_OnValueChanged);
                private static void _TypeOfWorkCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TypeOfWork.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Data> c, global::LightSwitchApplication.TypeOfWork.DetailsClass d, object sf)
                {
                    c(d, ref d._TypeOfWorkCode, sf);
                }
                private static bool _TypeOfWorkCode_ComputeIsReadOnly(global::LightSwitchApplication.TypeOfWork e)
                {
                    bool result = false;
                    e.TypeOfWorkCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _TypeOfWorkCode_Validate(global::LightSwitchApplication.TypeOfWork e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TypeOfWorkCode_Validate(r);
                }
                private static string _TypeOfWorkCode_GetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d)
                {
                    return d.ImplementationEntity.TypeOfWorkCode;
                }
                private static void _TypeOfWorkCode_SetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TypeOfWorkCode = v;
                }
                private static void _TypeOfWorkCode_OnValueChanged(global::LightSwitchApplication.TypeOfWork e)
                {
                    e.TypeOfWorkCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.Nullable<int>>.Entry
                    LoadDateID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.Nullable<int>>.Entry(
                        "LoadDateID",
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._LoadDateID_Stub,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._LoadDateID_ComputeIsReadOnly,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._LoadDateID_Validate,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._LoadDateID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._LoadDateID_OnValueChanged);
                private static void _LoadDateID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TypeOfWork.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.TypeOfWork.DetailsClass d, object sf)
                {
                    c(d, ref d._LoadDateID, sf);
                }
                private static bool _LoadDateID_ComputeIsReadOnly(global::LightSwitchApplication.TypeOfWork e)
                {
                    bool result = false;
                    e.LoadDateID_IsReadOnly(ref result);
                    return result;
                }
                private static void _LoadDateID_Validate(global::LightSwitchApplication.TypeOfWork e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LoadDateID_Validate(r);
                }
                private static global::System.Nullable<int> _LoadDateID_GetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d)
                {
                    return d.ImplementationEntity.LoadDateID;
                }
                private static void _LoadDateID_OnValueChanged(global::LightSwitchApplication.TypeOfWork e)
                {
                    e.LoadDateID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime>.Entry
                    sys_CreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime>.Entry(
                        "sys_CreatedOn",
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_CreatedOn_Stub,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_CreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_CreatedOn_Validate,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_CreatedOn_GetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_CreatedOn_SetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_CreatedOn_OnValueChanged);
                private static void _sys_CreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TypeOfWork.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.TypeOfWork.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_CreatedOn, sf);
                }
                private static bool _sys_CreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.TypeOfWork e)
                {
                    bool result = false;
                    e.sys_CreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_CreatedOn_Validate(global::LightSwitchApplication.TypeOfWork e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_CreatedOn_Validate(r);
                }
                private static global::System.DateTime _sys_CreatedOn_GetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_CreatedOn;
                }
                private static void _sys_CreatedOn_SetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.sys_CreatedOn = global::LightSwitchApplication.TypeOfWork.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _sys_CreatedOn_OnValueChanged(global::LightSwitchApplication.TypeOfWork e)
                {
                    e.sys_CreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Entry
                    sys_CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Entry(
                        "sys_CreatedBy",
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_CreatedBy_Stub,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_CreatedBy_Validate,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_CreatedBy_GetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_CreatedBy_SetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_CreatedBy_OnValueChanged);
                private static void _sys_CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TypeOfWork.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Data> c, global::LightSwitchApplication.TypeOfWork.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_CreatedBy, sf);
                }
                private static bool _sys_CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.TypeOfWork e)
                {
                    bool result = false;
                    e.sys_CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_CreatedBy_Validate(global::LightSwitchApplication.TypeOfWork e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_CreatedBy_Validate(r);
                }
                private static string _sys_CreatedBy_GetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_CreatedBy;
                }
                private static void _sys_CreatedBy_SetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d, string v)
                {
                    d.ImplementationEntity.sys_CreatedBy = v;
                }
                private static void _sys_CreatedBy_OnValueChanged(global::LightSwitchApplication.TypeOfWork e)
                {
                    e.sys_CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime>.Entry
                    sys_ModifiedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime>.Entry(
                        "sys_ModifiedOn",
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_ModifiedOn_Stub,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_ModifiedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_ModifiedOn_Validate,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_ModifiedOn_GetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_ModifiedOn_SetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_ModifiedOn_OnValueChanged);
                private static void _sys_ModifiedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TypeOfWork.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.TypeOfWork.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_ModifiedOn, sf);
                }
                private static bool _sys_ModifiedOn_ComputeIsReadOnly(global::LightSwitchApplication.TypeOfWork e)
                {
                    bool result = false;
                    e.sys_ModifiedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_ModifiedOn_Validate(global::LightSwitchApplication.TypeOfWork e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_ModifiedOn_Validate(r);
                }
                private static global::System.DateTime _sys_ModifiedOn_GetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_ModifiedOn;
                }
                private static void _sys_ModifiedOn_SetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.sys_ModifiedOn = global::LightSwitchApplication.TypeOfWork.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _sys_ModifiedOn_OnValueChanged(global::LightSwitchApplication.TypeOfWork e)
                {
                    e.sys_ModifiedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Entry
                    sys_ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Entry(
                        "sys_ModifiedBy",
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_ModifiedBy_Stub,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_ModifiedBy_Validate,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_ModifiedBy_GetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_ModifiedBy_SetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._sys_ModifiedBy_OnValueChanged);
                private static void _sys_ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TypeOfWork.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Data> c, global::LightSwitchApplication.TypeOfWork.DetailsClass d, object sf)
                {
                    c(d, ref d._sys_ModifiedBy, sf);
                }
                private static bool _sys_ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.TypeOfWork e)
                {
                    bool result = false;
                    e.sys_ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _sys_ModifiedBy_Validate(global::LightSwitchApplication.TypeOfWork e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sys_ModifiedBy_Validate(r);
                }
                private static string _sys_ModifiedBy_GetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d)
                {
                    return d.ImplementationEntity.sys_ModifiedBy;
                }
                private static void _sys_ModifiedBy_SetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d, string v)
                {
                    d.ImplementationEntity.sys_ModifiedBy = v;
                }
                private static void _sys_ModifiedBy_OnValueChanged(global::LightSwitchApplication.TypeOfWork e)
                {
                    e.sys_ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::LightSwitchApplication.TimesheetDetail>.Entry
                    TimesheetDetails = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::LightSwitchApplication.TimesheetDetail>.Entry(
                        "TimesheetDetails",
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TimesheetDetails_Stub,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TimesheetDetails_GetReferencedEntities,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._TimesheetDetails_GetEntityCollection);
                private static void _TimesheetDetails_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TypeOfWork.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::LightSwitchApplication.TimesheetDetail>.Data> c, global::LightSwitchApplication.TypeOfWork.DetailsClass d, object sf)
                {
                    c(d, ref d._TimesheetDetails, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TimesheetDetail> _TimesheetDetails_GetReferencedEntities(global::LightSwitchApplication.TypeOfWork.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.TimesheetDetail, global::LightSwitchApplication.TimesheetDetail.DetailsClass>(global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.TimesheetDetails, ref d._TimesheetDetails);
                }
                private static global::System.Collections.IEnumerable _TimesheetDetails_GetEntityCollection(global::LightSwitchApplication.TypeOfWork.DetailsClass d)
                {
                    return d.ImplementationEntity.TimesheetDetails;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::LightSwitchApplication.ActiveType>.Entry
                    ActiveType = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::LightSwitchApplication.ActiveType>.Entry(
                        "ActiveType",
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._ActiveType_Stub,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._ActiveType_ComputeIsReadOnly,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._ActiveType_Validate,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._ActiveType_GetCoreImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._ActiveType_GetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._ActiveType_SetImplementationValue,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._ActiveType_Refresh,
                        global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties._ActiveType_OnValueChanged);
                private static void _ActiveType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TypeOfWork.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::LightSwitchApplication.ActiveType>.Data> c, global::LightSwitchApplication.TypeOfWork.DetailsClass d, object sf)
                {
                    c(d, ref d._ActiveType, sf);
                }
                private static bool _ActiveType_ComputeIsReadOnly(global::LightSwitchApplication.TypeOfWork e)
                {
                    bool result = false;
                    e.ActiveType_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActiveType_Validate(global::LightSwitchApplication.TypeOfWork e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActiveType_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ActiveType_GetCoreImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d)
                {
                    return d.ImplementationEntity.ActiveType;
                }
                private static global::LightSwitchApplication.ActiveType _ActiveType_GetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ActiveType, global::LightSwitchApplication.ActiveType.DetailsClass>(global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType);
                }
                private static void _ActiveType_SetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass d, global::LightSwitchApplication.ActiveType v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType, (i, ev) => i.ActiveType = ev, v);
                }
                private static void _ActiveType_Refresh(global::LightSwitchApplication.TypeOfWork.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.TypeOfWork.DetailsClass.PropertySetProperties.ActiveType, ref d._ActiveType);
                }
                private static void _ActiveType_OnValueChanged(global::LightSwitchApplication.TypeOfWork e)
                {
                    e.ActiveType_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, int>.Data _TypeOfWorkID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Data _TypeOfWorkSourceKey;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime>.Data _LoadDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Data _TypeOfWorkName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Data _TypeOfWorkCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.Nullable<int>>.Data _LoadDateID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime>.Data _sys_CreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Data _sys_CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::System.DateTime>.Data _sys_ModifiedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, string>.Data _sys_ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::LightSwitchApplication.TimesheetDetail>.Data _TimesheetDetails;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TypeOfWork, global::LightSwitchApplication.TypeOfWork.DetailsClass, global::LightSwitchApplication.ActiveType>.Data _ActiveType;
            
        }
    
        #endregion
    }
    
    #endregion
}
